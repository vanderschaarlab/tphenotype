# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = tphenotype
description = T-Phenotype: Discovering Phenotypes of Predictive Temporal Patterns in Disease Progression
author = Evgeny Saveliev
author_email = e.s.saveliev@gmail.com
license = BSD-3-Clause
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8
url = https://github.com/pyscaffold/pyscaffold/
# Add here related links, for example:
# project_urls =
#    Documentation = https://pyscaffold.org/
#    Source = https://github.com/pyscaffold/pyscaffold/
#    Changelog = https://pyscaffold.org/en/latest/changelog.html
#    Tracker = https://github.com/pyscaffold/pyscaffold/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
#    Download = https://pypi.org/project/PyScaffold/#files
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.8

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    dtaidistance~=2.3
    importlib-metadata; python_version<"3.8"
    matplotlib~=3.5
    networkx~=2.8
    numpy~=1.22
    pandas~=1.4
    pyclustering~=0.10.1
    scikit_learn~=1.0
    scipy~=1.8
    sympy~=1.10
    torch >=1.12, <3.0
    tqdm~=4.64


[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Note: to use the discontinued tensorflow 1.0, we use the NVidia-maintained version:
# https://github.com/NVIDIA/tensorflow
# Note that this is not supported for python 3.9 and newer (unless one builds from source).
benchmarks =
    jupyter
    nvidia-pyindex; python_version == '3.8'
    nvidia-tensorflow[horovod]; python_version == '3.8'
# Note: `dev` includes `benchmarks` requirements.
dev =
    black[jupyter]
    build
    cython~=0.29
    flake8
    isort
    jupyter
    nvidia-pyindex; python_version == '3.8'
    nvidia-tensorflow[horovod]; python_version == '3.8'
    pre-commit
    pylint
    pyscaffold
    pytest
    pytest-cov
    setuptools>=46.1.0
    tox
    twine


[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = tphenotype.module:function
# For example:
# console_scripts =
#     fibonacci = tphenotype.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    --cov tphenotype --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
formats = bdist_wheel

[flake8]
max_line_length = 120
select = C,E,F,W,B,B950
extend_ignore = E203, E501, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
#    Additionally updated from:
#    https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#line-length
exclude =
    build
    dist
    .eggs

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.4
package = tphenotype
extensions =
    markdown
    no_skeleton
    pre_commit
